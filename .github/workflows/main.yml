# This is a basic workflow to help you get started with Actions

name: CI
on:
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: "18.x"
      - name: CI
        working-directory: ./
        run: |
          npm ci
          npm run format
          npm run lint
          npm run build
          npm run test
        env:
          # false の場合、worning レベルの場合はエラーにしない。
          # ※ false だったとしても、test でのエラーは Actions は失敗する。
          CI: false

  # for aws
  # dev_push:
  #   if: ${{ ! failure() }}
  #   needs: [build]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Use NodeJS
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: "14.x"
  #
  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: ap-northeast-1
  #
  #     - name: Login to Amazon ECR
  #       id: login-ecr
  #       uses: aws-actions/amazon-ecr-login@v1
  #
  #     - name: Build, tag, and push image to Amazon ECR
  #       working-directory: ./
  #       env:
  #         ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
  #         ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPO_NAME }}
  #         IMAGE_TAG: ${{ github.sha }}
  #       run: |
  #         npm ci
  #         npm run build
  #         mv build ./docker/
  #         cd docker
  #         docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
  #         docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
